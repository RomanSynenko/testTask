{"version":3,"sources":["webpack:///./js/refs.js","webpack:///./js/addZero.js","webpack:///./js/clock.js"],"names":["refs","minuteHand","document","querySelector","hourHand","hourNumetalLeft","hourNumetalRight","minutesNumetalLeft","minutesNumetalRight","addZero","value","String","padStart","state","hourLeft","hourRight","minutesLeft","minutesRight","circleMinutes","circleHour","interval","setDate","hour","minutes","Number","minutesDegrees","Math","floor","hourDegrees","arrowDegrees","handleTime","event","currentTarget","id","setInterval","createrState","addTimeNumeral","toString","slice","minutesAnalogTimer","createrTimer","style","transform","clearTime","clearInterval","window","addEventListener"],"mappings":"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","file":"main.1f6b87f2215b57f89085.js","sourcesContent":["const refs = {\n    minuteHand: document.querySelector('.minute-hand'),\n    hourHand: document.querySelector('.hour-hand'),\n    hourNumetalLeft: document.querySelector('#hourLeft'),\n    hourNumetalRight: document.querySelector('#hourRight'),\n    minutesNumetalLeft: document.querySelector('#minutesLeft'),\n    minutesNumetalRight: document.querySelector('#minutesRight'),\n}\nexport default refs;","const addZero = (value) => {\n    return String(value).padStart(2, '0');\n};\nexport default addZero;","import refs from './refs';\nimport addZero from './addZero';\nconst {\n    minuteHand,\n    hourHand,\n    hourNumetalLeft,\n    hourNumetalRight,\n    minutesNumetalLeft,\n    minutesNumetalRight\n} = refs;\nconst state = {\n    hourLeft: 2,\n    hourRight: 3,\n    minutesLeft: 5,\n    minutesRight: 5,\n    circleMinutes: 0,\n    circleHour: 0\n}\nlet interval = null;\nconst setDate = (hour = 18, minutes = 15) => {\n    if (Number(hour) === 0 && Number(minutes) === 0) {\n        state.circleMinutes += 1;\n        state.circleHour += 1;\n    }\n    const minutesDegrees = Math.floor(((minutes / 60) * 360) + 90);\n    const hourDegrees = Math.floor(((hour / 12) * 360) + ((minutes / 60) * 30) + 90);\n    arrowDegrees(minutesDegrees, hourDegrees);\n};\nconst handleTime = (event) => {\n    state[event.currentTarget.id] = Number(event.currentTarget.value);\n    interval = setInterval(createrState, 1000);\n};\nconst createrTimer = ({ hourLeft, hourRight, minutesLeft, minutesRight }) => {\n    const hour = addZero(Number(`${hourLeft}${hourRight}`));\n    const minutes = addZero(Number(`${minutesLeft}${minutesRight}`));\n    setDate(hour, minutes);\n    addTimeNumeral(hour, minutes);\n};\nconst addTimeNumeral = (hour, minutes) => {\n    hourNumetalLeft.value = hour.toString().slice(0, 1);\n    hourNumetalRight.value = hour.toString().slice(1, 2);\n    minutesNumetalLeft.value = minutes.toString().slice(0, 1);\n    minutesNumetalRight.value = minutes.toString().slice(1, 2);\n};\nconst createrState = () => {\n    if (state.minutesRight < 10) {\n        state.minutesRight += 1;\n        state.minutesAnalogTimer += 1;\n    }\n    if (state.minutesRight > 9) {\n        state.minutesRight = 0;\n        state.minutesLeft += 1;\n    }\n    if (state.minutesLeft > 5) {\n        state.minutesRight = 0;\n        state.minutesLeft = 0;\n        state.hourRight += 1;\n    }\n    if (state.hourRight > 9) {\n        state.minutesRight = 0;\n        state.minutesLeft = 0;\n        state.hourLeft += 1;\n    }\n\n    if (state.hourLeft >= 2 && state.hourRight > 3) {\n        state.minutesRight = 0;\n        state.minutesLeft = 0;\n        state.hourLeft = 0;\n        state.hourRight = 0;\n    }\n    createrTimer(state);\n};\n\n\nconst arrowDegrees = (minutesDegrees, hourDegrees) => {\n    if (state.circleMinutes >= 1) {\n        minutesDegrees = Number(minutesDegrees) + 358 * state.circleMinutes;\n        minuteHand.style.transform = `rotate(${minutesDegrees}deg)`;\n    }\n    if (state.circleHour >= 1) {\n        hourDegrees = Number(hourDegrees) + 720 * state.circleHour;\n        hourHand.style.transform = `rotate(${hourDegrees}deg)`;\n    }\n    minuteHand.style.transform = `rotate(${minutesDegrees}deg)`;\n    hourHand.style.transform = `rotate(${hourDegrees}deg)`;\n};\nconst clearTime = (event) => {\n    clearInterval(interval);\n    event.currentTarget.value = '';\n};\nwindow.addEventListener('load', handleTime);\nhourNumetalLeft.addEventListener('focus', clearTime);\nhourNumetalRight.addEventListener('focus', clearTime);\nminutesNumetalLeft.addEventListener('focus', clearTime);\nminutesNumetalRight.addEventListener('focus', clearTime);\nhourNumetalLeft.addEventListener('blur', handleTime);\nhourNumetalRight.addEventListener('blur', handleTime);\nminutesNumetalLeft.addEventListener('blur', handleTime);\nminutesNumetalRight.addEventListener('blur', handleTime);\n\nexport default setDate;\n"],"sourceRoot":""}